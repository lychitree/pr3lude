#!/bin/bash
#lychi (2023)
echo "Version: 2.0b [2023/24/02]"
echo "Usage: pr3lude [VERSION]"
echo "Allows for tetherbooting iPod touch 3G"
echo "iOS 3-4, iPod3,1 only"
echo "5.x support coming soon."
if [ "$1" == "-h" ]||[ "$1" == "--help" ]||[ -z "$1" ];
then
    echo
    echo "  -d  --dependencies         Downloads all binaries."
    echo "  -b, --boot                 Tether boot directly."
    echo
    exit
fi

#download tools
if [[ "$1" == "-d" ]] || [[ "$1" == "--dependencies" ]]
then
    echo
    echo "Downloading binaries"
    rm -rf bin/
    mkdir bin/
    cd bin/
    curl -JLO https://github.com/dora2-iOS/iPwnder32/releases/download/3.2/iPwnder32_3.2_3C152_RELEASE.zip
    unzip iPwnder32_3.2_3C152_RELEASE.zip
    chmod +x iPwnder32
    rm iPwnder32_3.2_3C152_RELEASE.zip
    curl -L -o xpwntool https://github.com/msftguy/ios-jb-tools/raw/master/tools_bin/osx/xpwntool
    chmod +x xpwntool
    curl -JLO https://github.com/tihmstar/partialZipBrowser/releases/download/v1.0/partialZipBrowser.zip
    unzip partialZipBrowser.zip
    chmod +x partialZipBrowser
    rm partialZipBrowser.zip
    ./partialZipBrowser -g odysseus-0.999.0/macos/irecovery https://dayt0n.com/odysseus/odysseus-0.999.zip
    chmod +x irecovery
    git clone https://github.com/dora2-iOS/iBoot32Patcher
    cd iBoot32Patcher/
    clang iBoot32Patcher.c finders.c functions.c patchers.c -Wno-multichar -I. -o iBoot32Patcher
    mv iBoot32Patcher ../iBootPatcher
    cd ..
    rm -rf iBoot32Patcher/
    mv iBootPatcher iBoot32Patcher
    cd ..
    if [[ -f bin/iBoot32Patcher ]]
    then
        echo "Binaries successfully downloaded."
        exit
    else
        echo "iBoot32Patcher binary compilation failed."
        exit
    fi
fi

#firmware urls and keys
if [ "$1" == "3.1.1" ]
then
    url="http://appldnld.apple.com.edgesuite.net/content.info.apple.com/iPod/SBML/osx/bundles/061-7163.20090909.NtstR/iPod3,1_3.1.1_7C145_Restore.ipsw"
    iv="e1b99c5b491a6c9dc2ec421a10853b1e"
    key="5685c34824a7873ef1dca42dec535efbf202e0e90915d2acc8c36a78283671b8"
fi
if [ "$1" == "3.1.1a" ]
then
    url="http://appldnld.apple.com.edgesuite.net/content.info.apple.com/iPhone/061-7238.20090918.23GhT/iPod3,1_3.1.1_7C146_Restore.ipsw"
    iv="e1b99c5b491a6c9dc2ec421a10853b1e"
    key="5685c34824a7873ef1dca42dec535efbf202e0e90915d2acc8c36a78283671b8"
fi
if [ "$1" == "3.1.2" ]
then
    url="http://appldnld.apple.com.edgesuite.net/content.info.apple.com/iPhone/061-7271.20091008.Tch23/iPod3,1_3.1.2_7D11_Restore.ipsw"
    iv="8caeaf0aac65bbf6f3f345f7a0c95f76"
    key="891747c374707b5cc6f5d4ffe9f0f24cc166858affc15f34d4bd0f41cb3077a0"
fi
if [ "$1" == "3.1.3" ]
then
    url="http://appldnld.apple.com.edgesuite.net/content.info.apple.com/iPhone/061-7473.20100202.4i44t/iPod3,1_3.1.3_7E18_Restore.ipsw"
    iv="cc884d83083849382cb33c59d61ca427"
    key="1750aa8b05b8bf78c76d35784f690b3684bf5107485db09a17e284974fbd695a"
fi
if [ "$1" == "4.0" ]
then
    url="http://appldnld.apple.com.edgesuite.net/content.info.apple.com/iPhone4/061-7381.20100621.AzSP9/iPod3,1_4.0_8A293_Restore.ipsw"
    iv="27c5becf5fea4936b44ab27f22ede19b"
    key="2e9374bcf55a4d14495141eddfdb9cca039a7dc0913676586cb3e19bcde135db"
fi
if [ "$1" == "4.0.2" ]
then
    url="http://appldnld.apple.com/iPhone4/061-8554.20100811.Bgt54/iPod3,1_4.0.2_8A400_Restore.ipsw"
    iv="27c5becf5fea4936b44ab27f22ede19b"
    key="2e9374bcf55a4d14495141eddfdb9cca039a7dc0913676586cb3e19bcde135db"
fi
if [ "$1" == "4.1" ]
then
    url="http://appldnld.apple.com/iPhone4/061-7941.20100908.sV9KE/iPod3,1_4.1_8B117_Restore.ipsw"
    iv="45e620eb1cabe17cb5e25018e628160e"
    key="1b45e1726a88d3e89a203a59544b853c531758dd3c6f15fd9fa24cfa4ebc949d"
fi
if [ "$1" == "4.2" ]
then
    url="https://secure-appldnld.apple.com/iPhone4/061-8273.20101105.73etw/ipod3,1_4.2_8c134_restore.ipsw"
    iv="962cc5a04ef71269630fd05b7d43f0d6"
    key="f51e414ba2cb4bf68fcd1ea70d420207d4e269d048265b6480764e65af511904"
fi
if [ "$1" == "4.2.1" ]
then
    url="https://secure-appldnld.apple.com/iPhone4/061-9860.20101122.Xsde3/iPod3,1_4.2.1_8C148_Restore.ipsw"
    iv="962cc5a04ef71269630fd05b7d43f0d6"
    key="f51e414ba2cb4bf68fcd1ea70d420207d4e269d048265b6480764e65af511904"
fi
if [ "$1" == "4.3" ];
then
    url="http://appldnld.apple.com/iPhone4/061-8366.20110311.Fr45t/iPod3,1_4.3_8F190_Restore.ipsw"
    iv="54774ea902fe56e59223b2b78d46b975"
    key="7b2c0dcc0a9d4b0bcfe7946d5e4563f5516c69495daa65a13ad630471f453007"
fi
if [ "$1" == "4.3.1" ];
then
    url="https://secure-appldnld.apple.com/iPhone4/041-0552.20110325.Yt67u/iPod3,1_4.3.1_8G4_Restore.ipsw"
    iv="24bb9af0d82d9c22f864dcd408038d20"
    key="1cacc4990ee4eca8a8ab800b00ab0951fd51c2b90bc8845c55101ce78665b52d"
fi
if [ "$1" == "4.3.2" ]
then
    url="https://secure-appldnld.apple.com/iPhone4/041-0667.20110414.95hVL/iPod3,1_4.3.2_8H7_Restore.ipsw"
    iv="a4ff016010ce6831cae2a7009113c16f"
    key="f7e6576f69cbcefbe96939efa39600cada2e13d12a6372499eff67f0566b86d2"
fi
if [ "$1" == "4.3.3" ];
then
    url="https://secure-appldnld.apple.com/iPhone4/041-1021.20110503.8Lfs1/iPod3,1_4.3.3_8J2_Restore.ipsw"
    iv="a4ff016010ce6831cae2a7009113c16f"
    key="f7e6576f69cbcefbe96939efa39600cada2e13d12a6372499eff67f0566b86d2"
fi
if [ "$1" == "4.3.4" ]
then
    url="https://secure-appldnld.apple.com/iPhone4/041-1919.20110715.ShHh4/iPod3,1_4.3.4_8K2_Restore.ipsw"
    iv="0883a549b9d4e1bc0b6efd995e91ae20"
    key="8e01489f416ff819089b1a2027802ea96ca6100107164686fe4c1cbeaa138c3c"
fi
if [ "$1" == "4.3.5" ]
then
    url="https://secure-appldnld.apple.com/iPhone4/041-1964.20110721.P9Cg3/iPod3,1_4.3.5_8L1_Restore.ipsw"
    iv="0883a549b9d4e1bc0b6efd995e91ae20"
    key="8e01489f416ff819089b1a2027802ea96ca6100107164686fe4c1cbeaa138c3c"
fi

#define kernelcache name
if [ "$1" == "3.1.1" ] || [ "$1" == "3.1.1a" ] || [ "$1" == "3.1.2" ] || [ "$1" == "3.1.3" ];
then
    kernelcache="kernelcache.release.s5l8922x"
else
    kernelcache="kernelcache.release.n18"
fi

#make and patch boot files
if [[ "$1" == "3.1.1" ]] || [[ "$1" == "3.1.1a" ]] || [ "$1" == "3.1.2" ] || [ "$1" == "3.1.3" ] || [ "$1" == "4.0" ] || [ "$1" == "4.0.2" ] || [ "$1" == "4.1" ] || [ "$1" == "4.2" ] || [ "$1" == "4.2.1" ] || [ "$1" == "4.3" ] || [ "$1" == "4.3.1" ] || [ "$1" == "4.3.2" ] || [ "$1" == "4.3.3" ] || [ "$1" == "4.3.4" ] || [[ "$1" == "4.3.5" ]];
then
    echo "Firmware detected: $1"
    mkdir $1/
    cd $1/
    if [[ ! -f ibss ]] || [[ ! -f devicetree ]] || [[ ! -f kernelcache ]]
    then
        echo "Downloading Firmware files..."
        ../bin/partialZipBrowser -g Firmware/dfu/iBSS.n18ap.RELEASE.dfu $url > /dev/null
        ../bin/partialZipBrowser -g Firmware/all_flash/all_flash.n18ap.production/DeviceTree.n18ap.img3 $url > /dev/null
        ../bin/partialZipBrowser -g $kernelcache $url > /dev/null
        echo "Patching iBSS..."
        ../bin/xpwntool iBSS.n18ap.RELEASE.dfu iBSSdec -iv $iv -k $key > /dev/null
        ../bin/iBoot32Patcher iBSSdec iBSSpwn --rsa -b "-v" > /dev/null
        ../bin/xpwntool iBSSpwn iBSS -t iBSS.n18ap.RELEASE.dfu > /dev/null
        echo "Cleaning up..."
        rm iBSS.n18ap.RELEASE.dfu iBSSdec iBSSpwn
        mv iBSS ibss
        mv DeviceTree.n18ap.img3 devicetree
        mv $kernelcache kernelcache
        cd ..
    else
        cd ..
        echo "Firmware files are already patched..."
    fi
else
    if [ "$1" = "-b" ] || [ "$1" = "--boot" ];
    then
        echo > /dev/null
    else
        echo "Incorrect/Unsupported firmware inputted. (First argument may be blank/boot)"
    fi
fi

if [ "$1" = "--boot" ] || [ "$1" = "-b" ];
then
    read -p "What version are you booting?: " version
    cd $version
    echo "Place device in DFU mode and press enter"
    read -p "Waiting for enter input..."
    echo "Pwning device..."
    ../bin/iPwnder32 -p > /dev/null
    sleep 0.1
    echo "Sending pwned iBSS..."
    ../bin/irecovery -f ibss > /dev/null
    echo "Unplug your iPod and replug it back in."
    read -p "Press enter when the screen lights up white: "
    echo "Because on an issue with irecovery binaries, you'll be entering in these commands manually. iRecovery will open a shell, and you will need to enter the following commands"
    echo "1. /send devicetree"
    echo "2. devicetree"
    echo "3. /send kernelcache"
    echo "4. bootx"
    echo "5. /exit"
    read -p "Press enter when ready: "
    echo "Enter commands now."
    ./bin/irecovery -s > /dev/null
    echo "Done! Device should now be booting."
else
    echo
    echo "Would you like to boot?"
    read -p "Y/N: " bootchoice
    if [[ $bootchoice == Y ]]
    then
        cd $1
        echo "Place device in DFU mode and press enter"
        read -p "Waiting for enter input..."
        echo "Pwning device..."
        ../bin/iPwnder32 -p > /dev/null
        sleep 0.1
        echo "Sending pwned iBSS..."
        ../bin/irecovery -f ibss > /dev/null
        echo "Unplug your iPod and replug it back in."
        read -p "Press enter when the screen lights up white: "
        echo "Because on an issue with irecovery binaries, you'll be entering in these commands manually. iRecovery will open a shell, and you will need to enter the following commands"
        echo "1. /send devicetree"
        echo "2. devicetree"
        echo "3. /send kernelcache"
        echo "4. bootx"
        echo "5. /exit"
        read -p "Press enter when ready: "
        echo "Enter commands now."
        ./bin/irecovery -s > /dev/null
        echo "Done! Device should now be booting."
    fi
fi